{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let LibraryService = /*#__PURE__*/(() => {\n  class LibraryService {\n    constructor(http) {\n      this.http = http;\n      this.numPageAtual1 = 1;\n      this.proxPag1 = this.numPageAtual1 + 1;\n      this.anteriorPag1 = this.numPageAtual1 - 1;\n      this.urlApi = 'https://api.unsplash.com/photos?per_page=50&page=' + this.numPageAtual1 + '&order_by=latest&fit=crop&w=500&h=500&';\n      this.apiKey = 'client_id=dd4e1cb73ca3a1036d4e98d26f72a439141dc17039e1ae79b7bc2a23f3488578';\n      this.ImagesFav = [];\n      this.unsplashUrl = 'https://api.unsplash.com';\n      this.search = '/search/photos';\n      this.searchQuery = '&query=';\n      this.pagesize = '&per_page=50';\n    }\n\n    getSearchedImages(query) {\n      const searchedUrl = this.unsplashUrl + this.search + this.apiKey + this.searchQuery + query + this.pagesize;\n      console.log(this.http.get(searchedUrl));\n      return this.http.get(searchedUrl);\n    }\n\n    getImages(page) {\n      let fullUrl = 'https://api.unsplash.com/photos?per_page=50&page=' + page + '&order_by=latest&fit=crop&w=500&h=500&' + this.apiKey;\n      console.log(fullUrl);\n      return this.http.get(fullUrl);\n    }\n\n    getImagesById(id) {\n      return this.http.get(`https://api.unsplash.com/photos/${id}?` + this.apiKey);\n    }\n\n    retrieveBySearch(search, page) {\n      this.searchNow = search;\n      console.log(`https://api.unsplash.com/search/photos?query=${this.searchNow}&per_page=50?&page=${page}&` + this.apiKey);\n      return this.http.get(`https://api.unsplash.com/search/photos?query=${this.searchNow}&per_page=50?&page=${page}&` + this.apiKey);\n    }\n\n    retriveAll() {\n      return this.ImagesFav;\n    }\n\n    createFavorite(allParamsImage) {\n      this.ImagesFav.push(allParamsImage);\n      console.log(allParamsImage);\n      console.log(this.ImagesFav);\n    }\n\n    removeMovie(idfavorite) {\n      let index;\n      this.ImagesFav.forEach(function (ImagesFavorite, i) {\n        if (ImagesFavorite.id == idfavorite) {\n          index = i;\n        }\n      });\n      this.ImagesFav.splice(index, 1);\n    }\n\n  }\n\n  LibraryService.ɵfac = function LibraryService_Factory(t) {\n    return new (t || LibraryService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  LibraryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LibraryService,\n    factory: LibraryService.ɵfac\n  });\n  return LibraryService;\n})();","map":null,"metadata":{},"sourceType":"module"}